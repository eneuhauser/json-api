{
  "id": "http://jsonapi.org/schema#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON API Schema",
  "description": "This is a schema for responses in the JSON API format. For more, see http://jsonapi.org",
  "oneOf": [
    { "$ref": "#/definitions/success" },
    { "$ref": "#/definitions/failure" }
  ],
  "definitions": {
    "success": {
      "type": "object",
      "required": [ "data" ],
      "properties": {
        "meta": { "$ref": "#/definitions/meta" },
        "data": { "$ref": "#/definitions/data" },
        "included": { "$ref": "#/definitions/included" },
        "links": { "$ref": "#/definitions/topLevelLinks" }
      },
      "additionalProperties": false
    },
    "failure": {
      "type": "object",
      "required": [ "errors" ],
      "properties": {
        "meta": { "$ref": "#/definitions/meta" },
        "errors": { "$ref": "#/definitions/errors" }
      },
      "additionalProperties": false
    },

    "meta": {
      "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
      "type": "object",
      "additionalProperties": true
    },
    "data": {
      "description": "Primary data **MUST** appear under a top-level key named \"data\". Primary data **MUST** be either a single resource object, an array of resource objects, or a value representing a resource relationship.",
      "oneOf": [
        { "$ref": "#/definitions/resource" },
        {
          "description": "An array of resource objects.",
          "type": "array",
          "items": { "$ref": "#/definitions/resource" },
          "uniqueItems": true
        }
      ]
    },
    "resource": {
      "description": "\"Resource objects\" appear in a JSON API document to represent primary data and linked resources.",
      "type": "object",
      "required": [ "type", "id" ],
      "properties": {
        "type": { "type": "string" },
        "id": { "type": "string" },
        "links": { "$ref": "#/definitions/links" },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "additionalProperties": true
    },
    "included": {
      "description": "A list of resource objects that are related to the primary data and/or each other (\"included resources\").",
      "type": "array",
      "items": { "$ref": "#/definitions/resource" },
      "uniqueItems": true
    },
    "topLevelLinks": {
      "description": "URLs related to the primary data.",
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/links" },
        { "$ref": "#/definitions/pagination" }
      ]
    },
    "links": {
      "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
      "type": "object",
      "properties": {
        "self": {
          "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
          "type": "string"
        },
        "meta": { "$ref": "#/definitions/meta" }
      },
      "patternProperties": {
        "^(?!(self|meta)$)": {
          "anyOf": [
            { "$ref": "#/definitions/linkageToOne" },
            { "$ref": "#/definitions/linkageToMany" },
            { "$ref": "#/definitions/linkageMissing" },
            { "type": "string" }
          ]
        }
      }
    },
    "linkageToOne": {
      "description": "`type` and `id` members for to-one relationships.",
      "allOf": [
        { "$ref": "#/definitions/linkage" },
        {
          "required": [ "type", "id" ],
          "properties": {
            "id": {
              "description": "`type` and `id` members for to-one relationships. `id` is the unique identifier for the given `type`",
              "type": "string"
            }
          }
        }
      ]
    },
    "linkageToMany": {
      "description": "`type` and `id` members for homogeneous to-many relationships. If `id` is specified, `type` **MUST** also be specified; otherwise, specify `related` or `self`.",
      "allOf": [
        { "$ref": "#/definitions/linkage" },
        { "$ref": "#/definitions/pagination" },
        {
          "properties": {
            "id": {
              "description": "`type` and `id` members for homogeneous to-many relationships.",
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            }
          }
        }
      ]
    },
    "linkageMissing": {
      "description": "If `id` is null or an `empty array ([])`, nothing is required.",
      "oneOf": [{ "$ref": "#/definitions/linkage" }]
    },
    "linkage": {
      "description": "Linkage to other resource objects (\"object linkage\") included in a compound document. This allows a client to link together all of the resource objects included in a compound document without having to GET one of the relationship URLs.",
      "type": "object",
      "properties": {
        "self": {
          "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the `people` resource itself.",
          "type": "string"
        },
        "related": {
          "description": "A URL for the related resource(s) (a \"related resource URL\"). When fetched, it returns the related resource object(s) as the response's primary data. For example, an `article`'s `comments` relationship could specify a URL that returns a list of comment resource objects when retrieved through a `GET` request.",
          "type": "string"
        },
        "type": {
          "description": "Member for to-one relationships and homogeneous to-many relationships. `type` defines the type of resource. `type` is not required if the value of `id` is `null`.",
          "type": "string"
        }
      },
      "patternProperties": {
        "^(?!(self|related|type|id)$)": {
          "anyOf": [
            { "$ref": "#/definitions/linkageToOne" },
            { "$ref": "#/definitions/linkageToMany" },
            { "$ref": "#/definitions/linkageMissing" },
            { "type": "string" }
          ]
        }
      },
      "additionalProperties": true
    },
    "pagination": {
      "type": "object",
      "properties": {
        "first": {
          "description": "the first page of data",
          "type": "string"
        },
        "last": {
          "description": "the last page of data",
          "type": "string"
        },
        "prev": {
          "description": "the previous page of data",
          "type": "string"
        },
        "next": {
          "description": "the next page of data",
          "type": "string"
        }
      }
    },
  
    "errors": {
      "type": "array",
      "items": { "$ref": "#/definitions/error" },
      "uniqueItems": true
    },
    "error": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A unique identifier for this particular occurrence of the problem.",
          "type": "string"
        },
        "href": {
          "description": "A URI that **MAY** yield further details about this particular occurrence of the problem.",
          "type": "string"
        },
        "status": {
          "description": "The HTTP status code applicable to this problem, expressed as a string value.",
          "type": "string"
        },
        "code": {
          "description": "An application-specific error code, expressed as a string value.",
          "type": "string"
        },
        "title": {
          "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
          "type": "string"
        },
        "detail": {
          "description": "A human-readable explanation specific to this occurrence of the problem.",
          "type": "string"
        },
        "links": {
          "description": "An array of JSON Pointers [RFC6901] to the associated resource(s) within the request document [e.g. [\"/data\"] for a primary data object].",
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        "paths": {
          "description": "An array of JSON Pointers to the relevant attribute(s) within the associated resource(s) in the request document. Each path **MUST** be relative to the resource path(s) expressed in the error object's \"links\" member [e.g. [\"/first-name\", \"/last-name\"] to reference a couple attributes].",
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        }
      },
      "additionalProperties": true
    }
  }
}
